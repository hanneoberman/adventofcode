---
title: "2023: Day 1"
date: 2023-12-1
categories:
  - R
draft: false
---

## Setup

[The original challenge](https://adventofcode.com/2023/day/1)

[My data](input){target="_blank"}

## Part 1

```{r}
#| echo: false
OK <- "2023" < 3000
# Will only evaluate next code block if an actual year has been substituted for the placeholder
```

Load the necessary packages and input.
```{r}
#| eval: !expr OK
library(aochelpers)
library(stringr)
library(purrr)
# other options: aoc_input_data_frame(), aoc_input_matrix()
input <- aoc_input_vector(1, 2023)
head(input)
```

Extract numeric elements only. See https://stringr.tidyverse.org/ for `stringr` functions and cheat sheet.
```{r}
dat_numbers <- str_remove_all(input, regex("[:alpha:]"))
```

Inspect results.
```{r}
input[1:3]
dat_numbers[1:3]
```

Now drop the middle values by extracting the first and last number.
```{r}
dat_first <- str_extract_all(dat_numbers, regex("^[:digit:]"), simplify = TRUE)
dat_last <- str_extract_all(dat_numbers, regex("[:digit:]$"), simplify = TRUE)
```

Inspect results.
```{r}
dat_first[1:3]
dat_last[1:3]
```

Now concatenate the first and last value.
```{r}
dat_values <- str_c(dat_first, dat_last)
```

Inspect.
```{r}
dat_values[1:3]
```

These can be converted to numeric.
```{r}
dat_vector <- as.numeric(dat_values)
```

Check.
```{r}
dat_vector[1:3]
```

Finally, add all values in the vector with calibration values.
```{r}
sum(dat_vector)
```

## Part 2

Add vector with viable textual values.
```{r}
text_values <- c("one", "two", "three", "four", "five", "six", "seven", "eight", "nine")
num_values <- as.character(1:9)
```

Before removing the letters, convert textual values to numbers.
```{r}
dat_input <- input
dat_replaced <- purrr::map2(text_values, num_values, ~{
	dat_input <<- str_replace_all(dat_input, .x, .y)
})[[9]]
```

Check if there are still values as text.
```{r}
dat_replaced[1:3]
```

Repeat above steps.
```{r}
dat_numbers <- str_remove_all(dat_replaced, regex("[:alpha:]"))
dat_first <- str_extract_all(dat_numbers, regex("^[:digit:]"), simplify = TRUE)
dat_last <- str_extract_all(dat_numbers, regex("[:digit:]$"), simplify = TRUE)
dat_values <- str_c(dat_first, dat_last)
```

Compute total.
```{r}
sum(as.numeric(dat_values))
```

This is incorrect because of overlapping letters in value names. Maybe use `str_locate` instead of `str_replace`?
```{r}
str_locate_all("abca", "a")[[1]][,1]
```

