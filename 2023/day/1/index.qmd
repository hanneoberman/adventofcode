---
title: "2023: Day 1"
date: 2023-12-1
categories:
  - TAG_1
  - TAG_2
draft: false
---

## Setup

[The original challenge](https://adventofcode.com/2023/day/1)

[My data](input){target="_blank"}

## Part 1

```{r}
#| echo: false
OK <- "2023" < 3000
# Will only evaluate next code block if an actual year has been substituted for the placeholder
```

Load the necessary packages and input.
```{r}
#| eval: !expr OK
library(aochelpers)
library(stringr)
# other options: aoc_input_data_frame(), aoc_input_matrix()
input <- aoc_input_vector(1, 2023)
head(input)
```

Extract numeric elements only. See https://stringr.tidyverse.org/ for `stringr` functions and cheat sheet.
```{r}
dat_numbers <- str_remove_all(input, regex("[:alpha:]"))
```

Inspect results.
```{r}
input[1:3]
dat_numbers[1:3]
```

Now drop the middle values.
```{r}
dat_first_last <- str_extract_all(dat_numbers, regex("^[:digit:]|[:digit:]$"))
```

Inspect results.
```{r}
dat_first_last[1:3]
```

This creates a list, which can be manipulated with `apply` functions.
```{r}
dat_values <- lapply(dat_first_last, str_c, collapse = "")
```

Inspect.
```{r}
dat_values[1:3]
```

These can be unlisted and converted to numeric.
```{r}
dat_vector <- as.numeric(unlist(dat_values))
```

Check.
```{r}
dat_vector[1:3]
```

Finally, add all values in the vector with calibration values.
```{r}
sum(dat_vector)
```


## Part 2


